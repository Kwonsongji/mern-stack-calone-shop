{"ast":null,"code":"import * as actionTypes from '../constants/userConstant';\nimport axios from 'axios';\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: actionTypes.USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post('/api/users/signin', {\n      email,\n      password\n    });\n    dispatch({\n      type: actionTypes.USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data)); // on conserve les données du user même si la fenêtre est fermée \n  } catch (error) {\n    dispatch({\n      type: actionTypes.USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message // détail de l'err\n      : error.message //message d'err général \n\n    });\n  }\n};\nexport const signup = (name, email, password) => async dispatch => {\n  dispatch({\n    type: actionTypes.USER_SIGNUP_REQUEST,\n    payload: {\n      name,\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post('/api/users/register', {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: actionTypes.USER_SIGNUP_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: actionTypes.USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data)); // on conserve les données du user même si la fenêtre est fermée \n  } catch (error) {\n    dispatch({\n      type: actionTypes.USER_SIGNUP_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message // détail de l'err\n      : error.message //message d'err général \n\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  localStorage.removeItem('shippingAdress');\n  dispatch({\n    type: actionTypes.USER_SIGNOUT\n  });\n};","map":{"version":3,"sources":["/Users/SongJi/mern-stack-calone-shop/frontend/src/redux/actions/userActions.js"],"names":["actionTypes","axios","signin","email","password","dispatch","type","USER_SIGNIN_REQUEST","payload","data","post","USER_SIGNIN_SUCCESS","localStorage","setItem","JSON","stringify","error","USER_SIGNIN_FAIL","response","message","signup","name","USER_SIGNUP_REQUEST","USER_SIGNUP_SUCCESS","USER_SIGNUP_FAIL","signout","removeItem","USER_SIGNOUT"],"mappings":"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","sourcesContent":["import * as actionTypes from '../constants/userConstant';\nimport axios from 'axios';\n\nexport const signin = (email, password) => async (dispatch) => {\n  dispatch({ type: actionTypes.USER_SIGNIN_REQUEST, payload: { email, password } });\n  try {\n    const { data } = await axios.post('/api/users/signin', { email, password });\n    dispatch({ type: actionTypes.USER_SIGNIN_SUCCESS, payload: data });\n    localStorage.setItem('userInfo', JSON.stringify(data)); // on conserve les données du user même si la fenêtre est fermée \n  } catch (error) {\n    dispatch({\n      type: actionTypes.USER_SIGNIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message // détail de l'err\n          : error.message, //message d'err général \n    });\n  }\n};\nexport const signup = (name, email, password) => async (dispatch) => {\n  dispatch({ type: actionTypes.USER_SIGNUP_REQUEST, payload: { name, email, password } });\n  try {\n    const { data } = await axios.post('/api/users/register', {\n      name,\n      email,\n      password\n    });\n    dispatch({ type: actionTypes.USER_SIGNUP_SUCCESS, payload: data });\n  dispatch({ type: actionTypes.USER_SIGNIN_SUCCESS, payload: data });\n    localStorage.setItem('userInfo', JSON.stringify(data)); // on conserve les données du user même si la fenêtre est fermée \n  } catch (error) {\n    dispatch({\n      type: actionTypes.USER_SIGNUP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message // détail de l'err\n          : error.message, //message d'err général \n    });\n  }\n};\nexport const signout = () => (dispatch) => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  localStorage.removeItem('shippingAdress')\n  dispatch({ type: actionTypes.USER_SIGNOUT });\n};"]},"metadata":{},"sourceType":"module"}