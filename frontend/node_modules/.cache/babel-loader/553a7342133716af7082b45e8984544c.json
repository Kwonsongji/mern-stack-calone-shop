{"ast":null,"code":"import * as actionTypes from '../constants/productConstants';\nimport axios from 'axios';\nexport const getProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: actionTypes.GET_PRODUCTS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products`);\n    dispatch({\n      type: actionTypes.GET_PRODUCTS_SUCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: actionTypes.GET_PRODUCTS_FAIL,\n      payload: error.response && error.response.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getProductDetails = d => async dispatch => {\n  try {\n    dispatch({\n      type: actionTypes.GET_PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products/${id}`);\n    dispatch({\n      type: actionTypes.GET_PRODUCT_DETAILS_SUCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: actionTypes.GET_PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const removeProductDetails = () => dispatch => {\n  dispatch({\n    type: actionTypes.GET_PRODUCT_DETAILS_RESET\n  });\n};","map":{"version":3,"sources":["/Users/SongJi/mern-stack-calone-shop/frontend/src/redux/actions/productActions.js"],"names":["actionTypes","axios","getProducts","dispatch","type","GET_PRODUCTS_REQUEST","data","get","GET_PRODUCTS_SUCESS","payload","error","GET_PRODUCTS_FAIL","response","message","getProductDetails","d","GET_PRODUCT_DETAILS_REQUEST","id","GET_PRODUCT_DETAILS_SUCESS","GET_PRODUCT_DETAILS_FAIL","removeProductDetails","GET_PRODUCT_DETAILS_RESET"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,+BAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACnD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,WAAW,CAACK;AAApB,KAAD,CAAR;AAEA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,KAAK,CAACM,GAAN,CAAW,eAAX,CAAvB;AAEAJ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,WAAW,CAACQ,mBADX;AAEPC,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GATD,CASE,OAAOI,KAAP,EAAc;AACdP,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,WAAW,CAACW,iBADX;AAEPF,MAAAA,OAAO,EAAEC,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeC,OAAjC,GACLH,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBO,OADf,GAELH,KAAK,CAACG;AAJH,KAAD,CAAR;AAOD;AACF,CAnBM;AAqBP,OAAO,MAAMC,iBAAiB,GAAIC,CAAD,IAAO,MAAOZ,QAAP,IAAoB;AAC1D,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,WAAW,CAACgB;AAApB,KAAD,CAAR;AAEA,UAAM;AAAEV,MAAAA;AAAF,QAAW,MAAML,KAAK,CAACM,GAAN,CAAW,iBAAgBU,EAAG,EAA9B,CAAvB;AAEAd,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,WAAW,CAACkB,0BADX;AAEPT,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GATD,CASE,OAAOI,KAAP,EAAc;AACdP,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,WAAW,CAACmB,wBADX;AAEPV,MAAAA,OAAO,EAAEC,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeC,OAAjC,GACLH,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBO,OADf,GAELH,KAAK,CAACG;AAJH,KAAD,CAAR;AAOD;AACF,CAnBM;AAqBP,OAAO,MAAMO,oBAAoB,GAAG,MAAOjB,QAAD,IAAc;AACtDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEJ,WAAW,CAACqB;AAApB,GAAD,CAAR;AACD,CAFM","sourcesContent":["import * as actionTypes from '../constants/productConstants';\nimport axios from 'axios';\n\nexport const getProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: actionTypes.GET_PRODUCTS_REQUEST });\n\n    const { data } = await axios.get(`/api/products`);\n\n    dispatch({\n      type: actionTypes.GET_PRODUCTS_SUCESS,\n      payload: data\n    })\n  } catch (error) {\n    dispatch({\n      type: actionTypes.GET_PRODUCTS_FAIL,\n      payload: error.response && error.response.message\n        ? error.response.data.message\n        : error.message\n    });\n\n  }\n};\n\nexport const getProductDetails = (d) => async (dispatch) => {\n  try {\n    dispatch({ type: actionTypes.GET_PRODUCT_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`/api/products/${id}`);\n\n    dispatch({\n      type: actionTypes.GET_PRODUCT_DETAILS_SUCESS,\n      payload: data\n    })\n  } catch (error) {\n    dispatch({\n      type: actionTypes.GET_PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.message\n        ? error.response.data.message\n        : error.message\n    });\n\n  }\n};\n\nexport const removeProductDetails = () => (dispatch) => {\n  dispatch({ type: actionTypes.GET_PRODUCT_DETAILS_RESET });\n};"]},"metadata":{},"sourceType":"module"}